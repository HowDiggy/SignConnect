services:
  # The Database Service (PostgreSQL)
  db:
    image: ankane/pgvector
    hostname: db # This allows the backend to connect using the name 'db'
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432" # Expose the database port to your Mac for local tools
    restart: unless-stopped

  # The Backend Service (FastAPI)
  backend:
    build:
      context: .
      dockerfile: backend.Dockerfile
    ports:
      - "8000:8000" # Expose the API port
    volumes:
      # Mount the source code for live-reloading
      - ./src:/app/src
      # Mount the credentials file
      - ./gcp-credentials.json:/app/gcp-credentials.json
    environment:
      # Pass environment variables to the container
      - GEMINI_API_KEY=${GEMINI_API_KEY}
      - FIREBASE_CLIENT_API_KEY=${FIREBASE_CLIENT_API_KEY}
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
      - GOOGLE_APPLICATION_CREDENTIALS=/app/gcp-credentials.json
      - POSTGRES_SERVER=db  # Use the service name 'db' as the server host
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    env_file:
      - .env
    depends_on:
      - db # This ensures the database starts before the backend
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/docs"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    restart: unless-stopped

  # The Frontend Service (React + Vite)
  frontend:
    build:
      context: ./frontend
    ports:
      - "5173:5173" # Expose the Vite development server port
    volumes:
      # Mount the frontend source code for live-reloading
      - ./frontend:/app/frontend
      # Exclude node_modules from being overwritten by the mount
      - /app/frontend/node_modules
    depends_on:
      backend:
        condition: service_healthy
    restart: unless-stopped

volumes:
  postgres_data:
