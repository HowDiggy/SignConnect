print("--- LOADING LATEST VERSION OF main.py ---")

import asyncio
import json
from contextlib import asynccontextmanager

from fastapi import FastAPI, WebSocket, WebSocketDisconnect, Depends
from fastapi.middleware.cors import CORSMiddleware
from google.cloud import speech
from sqlalchemy.orm import Session

# --- Core application and DB modules ---
# These are safe to import here as they don't loop back
from .db.database import get_db, Base, engine


@asynccontextmanager
async def lifespan(app: FastAPI):
    """
    Handles application startup and shutdown events.
    :param app:
    :return:
    """
    print("Application starting: Enabling pgvector extenstion...")
    # enable the pgvector extension first
    database.enable_pgvector_extension()

    print("Creating database tables...")
    # Create database tables
    models.Base.metadata.create_all(bind=database.engine)

    yield
    print("Appliccation shutdown.")

app = FastAPI(
    lifespan=lifespan,
    title="SignConnect API",
    description="API for the SignConnect assistive communication application.",
    version="0.1.0"
)

# This breaks the circular import chain
from .routers import users, scenarios, questions, websockets
from . import crud, schemas
from .db import database, models
from .llm.client import get_response_suggestions

# Tell the main app to use the new router
print("Including routers...")
app.include_router(scenarios.router)
app.include_router(users.router)
app.include_router(questions.router)
app.include_router(websockets.router)

# --- ADD THIS CORS MIDDLEWARE CONFIGURATION ---
# This allows your frontend (running on port 63342) to communicate with your backend.
origins = [
    "http://localhost",
    "http://localhost:63342", # The origin for your IDE's dev server
    "http://127.0.0.1:63342",
]

app.add_middleware(
    CORSMiddleware,
    allow_origins=origins,
    allow_credentials=True,
    allow_methods=["*"], # Allows all methods (GET, POST, etc.)
    allow_headers=["*"], # Allows all headers
)
# ---------------------------------------------



